%YAML:1.0
---
# --------------------------------------------------------------------------------------
# General saliency model parameters
# --------------------------------------------------------------------------------------
model:
   # Proportion of the image size used as the max LoG kernel size. Each kernel will be half the size of the previous.
   max_LoG_prop: 5.0200000000000000e-01
   # Number of LoG kernels. Set to -1 to get as many kernels as possible, i.e., until the smallest size is reached. Set to 0 to turn off all LoG convolutions.
   n_LoG_kern: 3
   # Window size for amount of blur applied to saliency map. Set to -1 to calculate window size from image size.
   gauss_blur_win: -1
   # Increase global contrast between high/low saliency.
   contrast_factor: 2.
   # Focal area proportion. Proportion of image size used to attenuate outer edges of the image area.
   central_focus_prop: 6.3000000000000000e-01
   # Threshold value to generate salient contours. Should be between 0 and 255. Set to -1 to use Otsu automatic thresholding.
   saliency_thresh: -1.
   # Threshold multiplier. Only applied to automatic threshold (i.e., saliency_thresh=-1).
   saliency_thresh_mult: 1.5000000000000000e+00
# --------------------------------------------------------------------------------------
# List of parameters for each feature map channel
# --------------------------------------------------------------------------------------
feature_channels:
   # Luminance/Color parameters --------------------------------------------------------
   color:
      # Color space to use as starting point for extracting luminance and color. Should be either "DKL", "LAB", or "RGB".
      colorspace: DKL
      # Scale parameter (k) for logistic function. Sharpens boundary between high/low intensity as value increases.
      scale: 1.
      # Shift parameter (mu) for logistic function. This threshold cuts lower level intensity as this value increases.
      shift: 0.
      # Weight applied to all pixels in each map/image. Set to 0 to toggle channel off.
      weight: 1.
   # Line orientation parameters -------------------------------------------------------
   lines:
      # Kernel size for square gabor patches. Set to -1 to calculate window size from image size.
      kern_size: -1
      # Number of rotations used to create differently angled Gabor patches. N rotations are split evenly between 0 and 2pi.
      n_rotations: 8
      # Sigma parameter for Gabor filter. Adjusts frequency.
      sigma: 1.6250000000000000e+00
      # Lambda parameter for Gabor filter. Adjusts width.
      lambda: 6.
      # Psi parameter for Gabor filter. Adjusts angle.
      psi: 1.9634950000000000e+00
      # Gamma parameter for Gabor filter. Adjusts ratio.
      gamma: 3.7500000000000000e-01
      # Weight applied to all pixels in each map/image. Set to 0 to toggle channel off.
      weight: 1.
   # Motion flicker parameters ---------------------------------------------------------
   flicker:
      # Cutoff value for minimum change in image contrast. Value should be between 0 and 1.
      lower_limit: 2.0000000298023224e-01
      # Cutoff value for maximum change in image contrast. Value should be between 0 and 1.
      upper_limit: 1.
      # Weight applied to all pixels in each map/image. Set to 0 to toggle channel off.
      weight: 1.
   # Optical flow parameters -----------------------------------------------------------
   flow:
      # Size of square window for sparse flow estimation. Set to -1 to calculate window size from image size. Setting this to a smaller value generates higher flow intensity but at the cost of accuracy.
      flow_window_size: -1
      # Maximum number of allotted points used to estimate flow between frames. 
      max_num_points: 200
      # Minimum distance between new points used to estimate flow. 
      min_point_dist: 15.
      # Half size of the dilation/erosion kernel used to expand flow points. 
      morph_half_win: 6
      # Number of iterations for the morphology operations. This will perform N dilations and N/2 erosion steps.
      morph_iters: 8
      # Weight applied to all pixels in each map/image. Set to 0 to toggle channel off.
      weight: 1.
